{"version":3,"file":"probaclick.modern.js","sources":["../src/ElementWatcher.js","../src/probaclick.js","../src/toArrayOfNodes.js"],"sourcesContent":["export default function (link, { max, delay, callback, count } = {}) {\n  function _fire() {\n    callback(link);\n\n    _totalFireCount++;\n\n    _resetStore();\n\n    _hasJustFired = true;\n\n    if (max !== null && _totalFireCount >= max) {\n      _updateListeners(\"remove\");\n    }\n  }\n\n  function _handleMouseLeave() {\n    clearTimeout(_timeout);\n    return _hasJustFired || _updateStoreTime();\n  }\n\n  function _handleMouseOver() {\n    _hasJustFired = false;\n    _hoverStart = Date.now();\n    _store.interactions++;\n\n    return _maybeFireBasedOnCount() || _maybeFireBasedOnTime();\n  }\n\n  function _updateListeners(type) {\n    for (let i in _mouseEventHandlers) {\n      link[`${type}EventListener`](i, _mouseEventHandlers[i]);\n    }\n  }\n\n  function _maybeFireBasedOnCount() {\n    if (_triggers.count === null) return false;\n\n    if (_store.interactions >= _triggers.count) {\n      _fire();\n      return true;\n    }\n\n    return false;\n  }\n\n  function _maybeFireBasedOnTime() {\n    if (_triggers.delay === null) return false;\n\n    _timeout = setTimeout(() => {\n      _fire();\n    }, _getTimeRemainingUntilFire());\n\n    return _timeout;\n  }\n\n  function _getTimeRemainingUntilFire() {\n    return _triggers.delay - _store.time;\n  }\n\n  function _resetStore() {\n    _store = {\n      time: 0,\n      interactions: 0,\n    };\n  }\n\n  function _updateStoreTime() {\n    _store.time = _store.time + (Date.now() - _hoverStart);\n  }\n\n  let _triggers = { delay, count };\n  let _hasJustFired = false;\n  let _totalFireCount = 0;\n  let _hoverStart = 0;\n  let _timeout = null;\n  let _store = {\n    time: 0,\n    interactions: 0,\n  };\n\n  const _mouseEventHandlers = {\n    mouseover: _handleMouseOver.bind(this),\n    mouseleave: _handleMouseLeave.bind(this),\n  };\n\n  _updateListeners(\"add\");\n\n  return {\n    remove: () => _updateListeners(\"remove\"),\n  };\n}\n","import ElementWatcher from \"./ElementWatcher\";\nimport toArrayOfNodes from \"./toArrayOfNodes\";\n\nexport default function (\n  elements,\n  { max = null, delay = 500, count = null, callback = () => {} } = {}\n) {\n  let watchers = toArrayOfNodes(elements).map((link) => {\n    return new ElementWatcher(link, {\n      delay,\n      callback,\n      max,\n      count,\n    });\n  });\n\n  return {\n    remove: () => {\n      watchers.forEach((w) => w.remove());\n    },\n  };\n}\n","export default function (thing) {\n  if (typeof thing === \"string\") {\n    thing = document.querySelectorAll(thing);\n  } else if (!(thing instanceof NodeList)) {\n    thing = [thing];\n  }\n\n  return [].slice.call(thing);\n}\n"],"names":["link","max","delay","callback","count","_totalFireCount","_store","time","interactions","_hasJustFired","_updateListeners","type","i","_mouseEventHandlers","mouseover","_hoverStart","Date","now","_triggers","_fire","_timeout","setTimeout","bind","this","mouseleave","clearTimeout","remove","elements","thing","document","querySelectorAll","slice","call","map","watchers","forEach","w"],"mappings":"WAAyBA,GAAMC,IAAEA,EAAGC,MAAEA,EAAKC,SAAEA,EAAQC,MAAEA,GAAU,IAC/D,aACED,EAASH,GAETK,IAwDAC,EAAS,CACPC,KAAM,EACNC,aAAc,GAtDhBC,GAAgB,EAEJ,OAARR,GAAgBI,GAAmBJ,GACrCS,EAAiB,UAiBrB,WAA0BC,GACxB,IAAK,WACHX,EAAM,GAAEW,kBAAqBC,EAAGC,EAAoBD,IAwCxD,MAAkBV,IAAOE,KACL,IACE,IACJ,IACH,OACF,CACXG,KAAM,EACNC,aAAc,GAGhB,QAA4B,CAC1BM,UA7DF,WAKE,OAJAL,GAAgB,EAChBM,EAAcC,KAAKC,MACnBX,EAAOE,eAYiB,OAApBU,GAEAZ,EAAOE,cAAgBU,IACzBC,SAQsB,OAApBD,IAEJE,EAAWC,WAAW,KACpBF,OAOuBb,EAAOC,UAyBJe,KAAKC,MACjCC,WAnEF,WAEE,OADAC,aAAaL,WAmDbd,EAAOC,KAAOD,EAAOC,MAAQS,KAAKC,MAAQF,KAeZO,KAAKC,OAKrC,OAFAb,EAAiB,OAEV,CACLgB,OAAQ,IAAMhB,EAAiB,sBCpFjCiB,GACA1B,IAAEA,EAAM,KAAIC,MAAEA,EAAQ,IAAGE,MAAEA,EAAQ,KAAID,SAAEA,EAAW,UAAa,IAEjE,OCPuByB,EDOOD,ECNT,mBACnBC,EAAQC,SAASC,iBAAiBF,GACvBA,wBACXA,EAAQ,CAACA,IAGJ,GAAGG,MAAMC,KAAKJ,IDAmBK,IAAKjC,SACjBA,EAAM,CAC9BE,MAAAA,EACAC,SAAAA,EACAF,IAAAA,EACAG,MAAAA,SCZmBwB,EDgBvB,MAAO,CACLF,OAAQ,KACNQ,EAASC,QAASC,GAAMA,EAAEV"}